on:
  workflow_call:
    secrets:
      GHCR_TOKEN:
        required: true
    inputs:
      prev_env:
        required: true
        type: string
      target_env:
        required: true
        type: string
env:
  GHCR_USER: ${{ vars.GHCR_USER }}
  GHCR_ORG: ${{ vars.GHCR_ORG }}
  GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
  ECLINT_REPO: editorconfig-checker/editorconfig-checker
  ECLINT_VERSION: 2.7.2
  CHECK_E2E_TEST: ${{ vars.CHECK_E2E_TEST || 'true' }}
jobs:
  pr_job:
    name: just lint
    runs-on: ubuntu-latest
    if: ${{ !contains(github.repository, 'util-orch-template') }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GHCR_TOKEN }}
      - uses: extractions/setup-just@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
      - name: setup opa
        uses: open-policy-agent/setup-opa@v2
        with:
          version: 0.53.1
      - uses: jaxxstorm/action-install-gh-release@v1.12.0
        name: install editorconfig-checker
        with:
          repo: ${{ env.ECLINT_REPO }}
          tag: ${{ env.ECLINT_VERSION }}
          binaries-location: bin
          chmod: 0755
      - name: setup editorconfig-checker
        run: |
          ln -s /opt/hostedtoolcache/${{ env.ECLINT_REPO }}/${{ env.ECLINT_VERSION }}/linux-x64/bin/ec-linux-amd64 \
            /opt/hostedtoolcache/${{ env.ECLINT_REPO }}/${{ env.ECLINT_VERSION }}/linux-x64/bin/editorconfig-checker
      - name: helm login
        run: helm registry login ghcr.io -u ${{ env.GHCR_USER }} -p ${{ env.GHCR_TOKEN }}
      - run: just lint
      - name: detect previous and target environments
        run: |
          echo "PREV_ENV=${{ inputs.prev_env }}" >> $GITHUB_ENV
          echo "TARGET_ENV=${{ inputs.target_env }}" >> $GITHUB_ENV
      - name: previous environment e2e tests check
        if: ${{ env.CHECK_E2E_TEST == 'true' }}
        run: |
          today=$(date +%Y-%m-%d)
          result=$(curl -s -H "Authorization: Bearer $GHCR_TOKEN" \
          "https://api.github.com/repos/$GHCR_ORG/endeavour-e2e/actions/workflows/e2e.yaml/runs?branch=main&status=completed&created>=$today&page=1" \
          | jq ".workflow_runs | sort_by(.updated_at) | reverse | .[]  | select(.name == \"E2E tests on $PREV_ENV\")" | jq -s '.[0] | select(.conclusion == "failure")')

          if [ -n "$result" ]; then
            echo "$PREV_ENV e2e tests failed and must be solved before the deployment on $TARGET_ENV will be allowed."
            exit 1;
          else
            echo "$PREV_ENV e2e tests successful."
          fi
      - name: target environment e2e tests check
        if: ${{ env.CHECK_E2E_TEST == 'true' }}
        run: |
          result=$(curl -s -H "Authorization: Bearer $GHCR_TOKEN" \
          "https://api.github.com/repos/$GHCR_ORG/endeavour-e2e/actions/workflows/e2e.yaml/runs?branch=main&status=completed&created>=$today&page=1" \
          | jq ".workflow_runs | sort_by(.updated_at) | reverse | .[]  | select(.name == \"E2E tests on $TARGET_ENV\")" | jq -s '.[0] | select(.conclusion == "failure")')

          if [ -n "$result" ]; then
            echo "$TARGET_ENV e2e tests failed and must be solved before the deployment on $TARGET_ENV will be allowed."
            exit 1;
          else
            echo "$TARGET_ENV e2e tests successful."
          fi