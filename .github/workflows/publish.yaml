on:
  workflow_call:
    secrets:
      GHCR_TOKEN:
        required: true

env:
  GHCR_USER: innovationlabsmt
  GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}

jobs:
  publish_artifact:
    name: Publish release artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
          token: ${{ env.GHCR_TOKEN }}
      - uses: extractions/setup-just@v1
      - id: theVersion
        run: echo "theVersion=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USER }}
          password: ${{ env.GHCR_TOKEN }}
      - uses: azure/setup-helm@v1
        with:
          version: '3.8.0'
      - run: |
          helm registry login ghcr.io -u ${{ env.GHCR_USER }} -p ${{ env.GHCR_TOKEN }}
      - uses: volesen/setup-skaffold@v1.1
        with:
          version: 'v1.33.0'
      # TODO create just receipe
      - run: skaffold build -t ${VERSION}
        env:
          VERSION: ${{ steps.theVersion.outputs.theVersion }}
      # TODO create just receipe for helm package
      - run: |
          just openapi
          just publish ${VERSION}
          helm dep up
          helm package --version ${VERSION} --app-version ${VERSION} .
          helm push ${{ github.event.repository.name }}-${VERSION}.tgz oci://ghcr.io/giginnovationlabs/helm
        env:
          VERSION: ${{ steps.theVersion.outputs.theVersion }}
      - run: |
          REL_ID=$(gh api -X GET repos/{owner}/{repo}/releases --jq '.[] | select(.tag_name == "${{ steps.theVersion.outputs.theVersion }}") | .id')
          gh api -X PATCH repos/{owner}/{repo}/releases/${REL_ID} -F prerelease=false -F name=${{ steps.theVersion.outputs.theVersion }}

      - id: skipDeploy
        uses: Legorooj/skip-ci@main
        with:
          pattern: '\[skip\sdeploy\]'
          token: ${{ env.GHCR_TOKEN }}
      - uses: benc-uk/workflow-dispatch@v1
        if: ${{ steps.skipDeploy.outputs.canSkip != 'true' }}
        with:
          workflow: Update
          repo: GiGInnovationLabs/orch-eks-dev
          token: ${{ env.GHCR_TOKEN }}
          ref: main
          inputs: '{ "repository": "${{ github.event.repository.name }}", "version": "${{ steps.theVersion.outputs.theVersion }}" }'
