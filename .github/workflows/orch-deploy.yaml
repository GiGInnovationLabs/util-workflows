on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
env:
  GHCR_ORG: ${{ vars.GHCR_ORG }}
  GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
  AWS_REGION: eu-west-1
jobs:
  helmfile_job:
    name: deploy to EKS
    runs-on: ubuntu-latest
    if: ${{ !contains(github.repository, 'util-orch-template') }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GHCR_TOKEN }}
      - name: is e2e enabled
        run: |
          if [ -f .skip_e2e ] || [ -f .skip-e2e ] || [ -f .skip.e2e ]; then
            echo "E2E=false" >> $GITHUB_ENV
          else
            echo "E2E=true" >> $GITHUB_ENV
          fi
      - name: announce
        run: |
          echo "environment=${{ inputs.environment }}, e2e=${{ env.E2E }}"
      - uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
      - uses: open-policy-agent/setup-opa@v2
        with:
          version: 0.49
      - uses: jaxxstorm/action-install-gh-release@v1
        with:
          repo: shenwei356/rush
          tag: v0.5.0
      - run: just test
      - uses: mamezou-tech/setup-helmfile@v1.2.0
        with:
          helmfile-version: 'v0.149.0'
          install-kubectl: no
          install-helm: no
      - name: setup aws cli
        if: ${{ startsWith(inputs.environment, 'eks-') }}
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: login to eks
        if: ${{ startsWith(inputs.environment, 'eks-') }}
        run: |
          if [ "${{ inputs.environment }}" == 'eks-dev' ]; then
            aws eks update-kubeconfig --name ${{ inputs.environment }}
          else
            aws eks update-kubeconfig --name $(echo '${{ inputs.environment }}' | sed 's/eks\-//g')
          fi
      - name: disable error notifications
        run: |
          kubectl patch daemonset fluent-bit -n telemetry -p '{"spec": {"template": {"spec": {"nodeSelector": {"non-existing": "true"}}}}}' || true
      - name: synchronize services
        run: |
          echo "DEPLOYMENT_BEGIN=$(($(date +%s%N)/1000000))" >> $GITHUB_ENV
          helmfile sync --concurrency 4
      - name: health check
        run: |
          just health
      - name: create deployment annotation
        if: always()
        run: |
          kubectl run curl-pod --image=curlimages/curl --attach --restart=Never --rm -- curl --request POST http://kube-prometheus-stack-grafana.prometheus.svc.cluster.local:80/api/annotations \
          --header 'Content-Type: application/json' \
          --data-raw '{
            "time":${{ env.DEPLOYMENT_BEGIN }},
            "timeEnd":'$(($(date +%s%N)/1000000))',
            "tags":["deployment", "${{ job.status }}"],
            "text":"Deployment"
          }'
      - name: enable error notifications
        if: always()
        run: |
          kubectl patch daemonset fluent-bit -n telemetry --type json -p='[{"op": "remove", "path": "/spec/template/spec/nodeSelector/non-existing"}]' || true
      - name: start e2e tests
        uses: benc-uk/workflow-dispatch@v1
        if: ${{ env.E2E == 'true' }}
        with:
          workflow: E2E test
          repo: ${{ vars.GHCR_ORG }}/endeavour-e2e
          token: ${{ secrets.GHCR_TOKEN }}
          ref: main
          inputs: '{"environment": "${{ inputs.environment }}"}'
