on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      e2e:
        required: false
        default: true
        type: boolean

env:
  GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
  AWS_REGION: eu-west-1

jobs:
  helmfile_job:
    name: deploy to EKS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GHCR_TOKEN }}
      - name: announce
        run: |
          echo "environment=${{ inputs.environment }}, e2e=${{ inputs.e2e }}"
      - uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
      - uses: open-policy-agent/setup-opa@v2
        with:
          version: latest
      - run: just test
      - uses: mamezou-tech/setup-helmfile@v1.2.0
        with:
          helmfile-version: 'v0.147.0'
          install-kubectl: no
          install-helm: no
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: login to eks
        run: |
          if [ "${{ inputs.environment }}" == 'eks-dev' ]; then
            aws eks update-kubeconfig --name ${{ inputs.environment }}
          else
            aws eks update-kubeconfig --name $(echo '${{ inputs.environment }}' | sed 's/eks\-//g')
          fi
      - name: disable error notifications
        run: |
          kubectl patch daemonset fluent-bit -n telemetry -p '{"spec": {"template": {"spec": {"nodeSelector": {"non-existing": "true"}}}}}' || true
      - name: synchronize services
        run: |
          echo "DEPLOYMENT_BEGIN=$(($(date +%s%N)/1000000))" >> $GITHUB_ENV
          helmfile apply --concurrency 4
      - name: check services
        run: |
          if [ ! -z "$(helm ls -a -o yaml -n endeavour | yq e '.[].status' - | grep -v '^deployed$')" ]; then
            echo "::error title=status::Some charts not deployed !!!"
            exit 1
          fi
          kubectl get ds,deploy -n endeavour -o name | xargs -r kubectl rollout status -n endeavour --timeout=3m
          just health-opa
      - name: create deployment annotation
        if: always()
        run: |
          kubectl run curl-pod --image=curlimages/curl --attach --restart=Never --rm -- curl --request POST http://kube-prometheus-stack-grafana.prometheus.svc.cluster.local:80/api/annotations \
          --header 'Content-Type: application/json' \
          --data-raw '{
            "time":${{ env.DEPLOYMENT_BEGIN }},
            "timeEnd":'$(($(date +%s%N)/1000000))',
            "tags":["deployment", "${{ job.status }}"],
            "text":"Deployment"
          }'
      - name: enable error notifications
        if: always()
        run: |
          kubectl patch daemonset fluent-bit -n telemetry --type json -p='[{"op": "remove", "path": "/spec/template/spec/nodeSelector/non-existing"}]' || true
      - name: start e2e tests
        uses: benc-uk/workflow-dispatch@v1
        if: ${{ inputs.e2e == true }}
        with:
          workflow: E2E test
          repo: GiGInnovationLabs/endeavour-e2e
          token: ${{ secrets.GHCR_TOKEN }}
          ref: main
          inputs: '{"environment": "${{ inputs.environment }}"}'
      - name: capture asset registry
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Asset registry
          token: ${{ secrets.GHCR_TOKEN }}
          ref: main
      - uses: slackapi/slack-github-action@v1.23.0
        if: failure()
        with:
          channel-id: 'eks_dev_ci'
          payload: |
            {
              "icon_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
              "username": "${{ inputs.environment }}",
              "unfurl_links": false,
              "unfurl_media": false,
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "‚ùå *Deployment failed* ‚ùå"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "üëÄ <${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}|Workflow logs> üëÄ"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
