name: Run Tests and Code Analysis

on:
  workflow_call:
    secrets:
      GHCR_TOKEN:
        required: true
      SONAR_TOKEN:
        required: true

env:
  GHCR_USER: ${{ vars.GHCR_USER }}
  GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
  GHCR_ORG: ${{ vars.GHCR_ORG }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: https://sonarcloud.io
  PROJECT_KEY: GiGInnovationLabs_${{ github.event.repository.name }}
  
jobs:
  build:
    name: Run Tests and SonarQube Analysis
    runs-on: ubuntu-latest
    if: ${{ !contains(github.repository, '-opa-') && !contains(github.repository, '-template-') }}
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Set up .NET 6 and 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
           6.0.x
           8.0.x

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GHCR_TOKEN }}

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ~/.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install Sonar Scanner Tool
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ~/.sonar/scanner

      - name: Install Report Generator
        run: |
          mkdir -p ~/.reportgenerator
          dotnet tool update dotnet-reportgenerator-globaltool --tool-path ~/.reportgenerator --version 5.3.11

      - name: Run Tests and Generate Coverage Report
        run: |
          dotnet tool restore
          dotnet test --logger trx --results-directory /tmp/test-report --filter "Category=Unit|Category=Component|Category=Integration" --collect:"XPlat Code Coverage"
          ~/.reportgenerator/reportgenerator -reports:"/tmp/test-report/**/coverage.cobertura.xml" -targetdir:"coverage-report" -reporttypes:SonarQube

      - name: Build and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ~/.sonar/scanner/dotnet-sonarscanner begin /k:"$PROJECT_KEY" /o:"giginnovationlabs" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ env.SONAR_HOST_URL }}" /d:sonar.coverageReportPaths="coverage-report/SonarQube.xml"
          dotnet build
          ~/.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"